xlab("Proportion of zeros correct")
ylab("Proportion of ones correct")
dev.off()
## Plotting proportion of 'links' correct vs proportion of 'no links' correct
pdf(paste(c(dirnam,'/','1_vs_0.pdf'),collapse = ''),width=6,height=6)
plot(prop.0.corr, prop.1.corr, main = desc, xlab = "Proportion of zeros correct",
ylab = "Proportion of ones correct")
dev.off()
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dir_path = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dir_path = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
N <- dim(foodweb)[1]
dim(all.web.info)
dim(all.web.info$predation.matrix)
dim(abclike.RH.web)
dim(abclike.RH.web$post_dists)
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dir_path = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
real_foodweb
real_foodweb$web.name
prop_web <- fw_prop(predicted_foodweb, model_core_par, real_foodweb)
real <- real_prop(all.web.info)
prop <- prop_web$prop
best.web <- prop_web$web
prop.0.corr <- prop$prop.0.corr
prop.1.corr <- prop$prop.1.corr
## Plot the real predation matrix
Plot.matrix(real_predmat,title = paste("C",conn.real.web,sep="="))
## Plot the predicted predation matrix
Plot.matrix_uncertainty(best.web, title = paste(c("Predicted predation matrix ",desc), collapse = ''))
dev.off()
## Plotting the structural properties of food web
s1 <- plot_prop(prop$prop_basal, "Proportion basal", real$prop_basal)
s2 <- plot_prop(prop$prop_inter, "Proportion intermediate", real$prop_inter)
s3 <- plot_prop(prop$prop_top, "Proportion top", real$prop_top)
s4 <- plot_prop(prop$prop_herb, "Proportion herbivores", real$prop_herb)
s5 <- plot_prop(prop$mean_trop_lvl, "Mean trophic level", real$mean_trop_lvl)
s6 <- plot_prop(prop$max_trop_lvl, "Max trophic level", real$max_trop_lvl)
s7 <- plot_prop(prop$mean_omn, "Mean omnivory", real$mean_omn)
s8 <- plot_prop(prop$sd_gen, "Standard deviation of generalism", real$sd_gen)
s9 <- plot_prop(prop$sd_vulner, "Standard deviation of vulnerability", real$sd_vulner)
s10 <- plot_prop(prop$diet_sim, "Diet similarity", real$diet_sim)
s11 <- plot_prop(prop$mean_path_lt, "Mean path length", real$mean_path_lt)
figure <- ggarrange(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11, nrow = 6, ncol=2)
name <-  paste(c(dirnam,"/",'properties.pdf'), collapse = '')
annotate_figure(figure, top = desc)
ggsave(filename = name, width=9, height=12)
## Plotting proportion of 'links' correct vs proportion of 'no links' correct
pdf(paste(c(dirnam,'/','1_vs_0.pdf'),collapse = ''),width=6,height=6)
plot(prop.0.corr, prop.1.corr, main = desc, xlab = "Proportion of zeros correct",
ylab = "Proportion of ones correct")
dev.off()
conn.real.web = format(round(sum(real_foodweb$predation.matrix)/dim(real_predmat)[1]^2, 2), nsmall = 2)
pdf(paste(c(dirnam,"/",'matrix.pdf'),collapse = ''),width=18,height=6)
par(mfrow=c(1,3))
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dir_path = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
plot_prop()
s1 <- plot_prop(prop$prop_basal, "Proportion basal", real$prop_basal)
s2 <- plot_prop(prop$prop_inter, "Proportion intermediate", real$prop_inter)
s3 <- plot_prop(prop$prop_top, "Proportion top", real$prop_top)
s4 <- plot_prop(prop$prop_herb, "Proportion herbivores", real$prop_herb)
s5 <- plot_prop(prop$mean_trop_lvl, "Mean trophic level", real$mean_trop_lvl)
s6 <- plot_prop(prop$max_trop_lvl, "Max trophic level", real$max_trop_lvl)
s7 <- plot_prop(prop$mean_omn, "Mean omnivory", real$mean_omn)
s8 <- plot_prop(prop$sd_gen, "Standard deviation of generalism", real$sd_gen)
s9 <- plot_prop(prop$sd_vulner, "Standard deviation of vulnerability", real$sd_vulner)
s10 <- plot_prop(prop$diet_sim, "Diet similarity", real$diet_sim)
s11 <- plot_prop(prop$mean_path_lt, "Mean path length", real$mean_path_lt)
s1 <- plot_prop(prop$prop_basal, "Proportion basal", real$prop_basal)
s2 <- plot_prop(prop$prop_inter, "Proportion intermediate", real$prop_inter)
s3 <- plot_prop(prop$prop_top, "Proportion top", real$prop_top)
s4 <- plot_prop(prop$prop_herb, "Proportion herbivores", real$prop_herb)
s5 <- plot_prop(prop$mean_trop_lvl, "Mean trophic level", real$mean_trop_lvl)
s6 <- plot_prop(prop$max_trop_lvl, "Max trophic level", real$max_trop_lvl)
s7 <- plot_prop(prop$mean_omn, "Mean omnivory", real$mean_omn)
s8 <- plot_prop(prop$sd_gen, "Standard deviation of generalism", real$sd_gen)
s9 <- plot_prop(prop$sd_vulner, "Standard deviation of vulnerability", real$sd_vulner)
s10 <- plot_prop(prop$diet_sim, "Diet similarity", real$diet_sim)
s11 <- plot_prop(prop$mean_path_lt, "Mean path length", real$mean_path_lt)
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
plot_prop(prop$prop_basal, "Proportion basal", real$prop_basal)
plot_prop()
plot_prop
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
library(R.utils)
library(tictoc)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM")
sourceDirectory("../method")
sourceDirectory("../analysis_tools")
sourceDirectory("../data")
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
input_parameters()
asd<- input_parameters()
asd
abclike.RH.web$total_sim
N
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
toc()
print(paste("Proportion of accepted simulations =", round(dir_N/abc.RH.web$total_sim,3)))
print(paste("Proportion of accepted simulations =", round(dir_N/abclike.RH.web$total_sim,3)))
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
toc()
print(paste("Proportion of accepted simulations =", round(dir_N/abclike.RH.web$total_sim,3)))
library(R.utils)
library(tictoc)
## Loading required libraries
library(ggpubr); library(plotrix); library(ggplot2)
library(cowplot); library(latex2exp); library(HDInterval)
library(doParallel); library(foreach); library(raster)
## Start of computation time
tic("Time elapsed:")
## Relative path from the project directory
sourceDirectory("../ADBM", modifiedOnly=FALSE)
sourceDirectory("../method", modifiedOnly=FALSE)
sourceDirectory("../analysis_tools", modifiedOnly=FALSE)
sourceDirectory("../data", modifiedOnly=FALSE)
source("rejection.R")
web.to.analyse <- "Benguela Pelagic"
foodweb_data <- load(paste("../data/", web.to.analyse, ".web.Rdata", sep=""))
all.web.info <- get(foodweb_data)
model = ratio.power
model_core_par = ADBM_core_par(all.web.info)
model_prior_par = ADBM_prior_par()
input_par = input_parameters()
dist_ss = dist_connectance
desc = "connectance"
## Creating a directory where all the results will be stored
dir_N <- input_par$N
dir_tol <- input_par$tol
ss_type <- as.character(substitute(dist_ss))
dirnam <- paste(c("../results/",web.to.analyse,"/",'N=', dir_N, '_tol=', dir_tol,"_", desc), collapse = '')
dir.create(dirnam)
## Running the rejection algorithm
abclike.RH.web <- rejection(all.web.info = all.web.info, model = model, model_core_par = model_core_par,
model_prior_par=model_prior_par, input_parameters=input_par, dist_ss = dist_ss)
save(abclike.RH.web, file = paste(c(dirnam,"/",web.to.analyse,".Rdata"), collapse = ''))
## Plotting the real and predicted food web matrix alongwith some food web properties
plot_foodweb(real_foodweb = all.web.info, predicted_foodweb = abclike.RH.web,
dirnam = dirnam, model_core_par = model_core_par, model = model,
desc=desc)
toc()
print(paste("Proportion of accepted simulations =", round(dir_N/abclike.RH.web$total_sim,3)))
